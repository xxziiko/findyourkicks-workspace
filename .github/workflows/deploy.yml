name: CD - Selective App Deployment

on:
  repository_dispatch:
    types: [deploy-shop, deploy-admin, deploy-stack]
  workflow_dispatch:
    inputs:
      app:
        description: 'App to deploy (shop, admin, or stack)'
        required: true
        default: 'stack'
        type: choice
        options:
        - shop
        - admin
        - stack

env:
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_ADMIN: ${{ secrets.DOCKERHUB_ADMIN }}
  DOCKERHUB_SHOP: ${{ secrets.DOCKERHUB_SHOP }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine deployment type
        id: deploy-type
        run: |
          if [ "${{ github.event.action }}" = "deploy-shop" ] || [ "${{ inputs.app }}" = "shop" ]; then
            echo "app=shop" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.action }}" = "deploy-admin" ] || [ "${{ inputs.app }}" = "admin" ]; then
            echo "app=admin" >> $GITHUB_OUTPUT
          else
            echo "app=stack" >> $GITHUB_OUTPUT
          fi

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/${{ secrets.EC2_USER }}/findyourkicks"

      - name: Deploy Shop App Only
        if: steps.deploy-type.outputs.app == 'shop'
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.EC2_USER }}/findyourkicks
            
            # 환경변수 설정
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DOCKERHUB_SHOP=${{ secrets.DOCKERHUB_SHOP }}
            export DOCKERHUB_ADMIN=${{ secrets.DOCKERHUB_ADMIN }}
            
            # Shop 이미지만 pull
            sudo docker pull $DOCKER_USERNAME/$DOCKERHUB_SHOP:latest
            
            # Shop 서비스만 재시작 (nginx는 그대로 유지)
            sudo docker-compose up -d --no-deps shop
            
            # 헬스체크
            sleep 15
            sudo docker-compose ps shop

      - name: Deploy Admin App Only
        if: steps.deploy-type.outputs.app == 'admin'
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.EC2_USER }}/findyourkicks
            
            # 환경변수 설정
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DOCKERHUB_ADMIN=${{ secrets.DOCKERHUB_ADMIN }}
            export DOCKERHUB_SHOP=${{ secrets.DOCKERHUB_SHOP }}
            
            # Admin 이미지만 pull
            sudo docker pull $DOCKER_USERNAME/$DOCKERHUB_ADMIN:latest
            
            # Admin 서비스만 재시작 (nginx는 그대로 유지)
            sudo docker-compose up -d --no-deps admin
            
            # 헬스체크
            sleep 15
            sudo docker-compose ps admin

      - name: Deploy Full Stack
        if: steps.deploy-type.outputs.app == 'stack'
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ secrets.EC2_USER }}/findyourkicks
            
            # 환경변수 설정
            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export DOCKERHUB_ADMIN=${{ secrets.DOCKERHUB_ADMIN }}
            export DOCKERHUB_SHOP=${{ secrets.DOCKERHUB_SHOP }}
            
            # 모든 이미지 pull
            sudo docker pull $DOCKER_USERNAME/$DOCKERHUB_ADMIN:latest
            sudo docker pull $DOCKER_USERNAME/$DOCKERHUB_SHOP:latest
            sudo docker pull $DOCKER_USERNAME/findyourkicks-nginx:latest
            
            # 전체 스택 재시작
            sudo docker-compose down || true
            sudo docker-compose up -d
            
            # 헬스체크
            sleep 30
            sudo docker-compose ps
            